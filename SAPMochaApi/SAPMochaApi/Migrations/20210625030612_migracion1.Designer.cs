// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAPMochaApi.Models;

namespace SapMochaApi.Migrations
{
    [DbContext(typeof(sapContext))]
    [Migration("20210625030612_migracion1")]
    partial class migracion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SapMochaApi.Models.Categorias", b =>
                {
                    b.Property<int>("IdCategorias")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("IdTipoProductores");

                    b.Property<string>("Nombre");

                    b.HasKey("IdCategorias");

                    b.HasIndex("IdTipoProductores");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SapMochaApi.Models.Productores", b =>
                {
                    b.Property<int>("IdProveedores")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Cargo");

                    b.Property<string>("Cedula");

                    b.Property<string>("Correo");

                    b.Property<string>("DetalleDiscapacidad");

                    b.Property<string>("DetalleOrganizacion");

                    b.Property<string>("Direccion");

                    b.Property<bool>("Discapacidad");

                    b.Property<int>("Edad");

                    b.Property<int>("IdTipoProductores");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.Property<string>("Nombres");

                    b.Property<bool>("Organizacion");

                    b.Property<string>("PaginaWeb");

                    b.Property<int>("PorcentajeDiscapacidad");

                    b.Property<string>("Sexo");

                    b.Property<string>("Telefono");

                    b.HasKey("IdProveedores");

                    b.HasIndex("IdTipoProductores");

                    b.ToTable("Productores");
                });

            modelBuilder.Entity("SapMochaApi.Models.Productos", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("IdCategorias");

                    b.Property<string>("NombreProducto");

                    b.Property<decimal>("PrecioDocena")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Stock");

                    b.Property<string>("Talla");

                    b.Property<string>("Unidad");

                    b.HasKey("IdProductos");

                    b.HasIndex("IdCategorias");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SapMochaApi.Models.TipoProductores", b =>
                {
                    b.Property<int>("IdTipoProductores")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("IdTipoProductores");

                    b.ToTable("TipoProductores");
                });

            modelBuilder.Entity("SAPMochaApi.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Cedula");

                    b.Property<string>("Clave");

                    b.Property<string>("Correo");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombres");

                    b.Property<string>("Telefono");

                    b.Property<string>("Usuario");

                    b.HasKey("IdUsuarios");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SapMochaApi.Models.Categorias", b =>
                {
                    b.HasOne("SapMochaApi.Models.TipoProductores", "tipoproductores")
                        .WithMany()
                        .HasForeignKey("IdTipoProductores")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SapMochaApi.Models.Productores", b =>
                {
                    b.HasOne("SapMochaApi.Models.TipoProductores", "tipoproductores")
                        .WithMany()
                        .HasForeignKey("IdTipoProductores")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SapMochaApi.Models.Productos", b =>
                {
                    b.HasOne("SapMochaApi.Models.Categorias", "categorias")
                        .WithMany()
                        .HasForeignKey("IdCategorias")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
